// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RFS.Core.Enums;
using RFS.RepositoriesCore;
using System;

namespace RFS.RepositoriesCore.Migrations
{
    [DbContext(typeof(RFSContext))]
    [Migration("20180420203958_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RFS.Core.Request", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("CreatedByID");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedByID");

                    b.HasKey("ID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int?>("IdentityRoleId");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("IdentityRoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("CreatedByID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("IdentityRoleId");

                    b.Property<bool>("IsActive");

                    b.Property<int>("LanguagePreferred");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UpdatedByID");

                    b.Property<string>("UserName")
                        .HasMaxLength(20);

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.HasIndex("IdentityRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int?>("IdentityUserId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUserLogin", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<int?>("IdentityUserId");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityRoleClaim", b =>
                {
                    b.HasOne("RFS.Core.Security.IdentityRole")
                        .WithMany("Claims")
                        .HasForeignKey("IdentityRoleId");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUser", b =>
                {
                    b.HasOne("RFS.Core.Security.IdentityRole")
                        .WithMany("Users")
                        .HasForeignKey("IdentityRoleId");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUserClaim", b =>
                {
                    b.HasOne("RFS.Core.Security.IdentityUser")
                        .WithMany("Claims")
                        .HasForeignKey("IdentityUserId");
                });

            modelBuilder.Entity("RFS.Core.Security.IdentityUserLogin", b =>
                {
                    b.HasOne("RFS.Core.Security.IdentityUser")
                        .WithMany("Logins")
                        .HasForeignKey("IdentityUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
